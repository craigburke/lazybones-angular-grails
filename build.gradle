plugins {
	id 'uk.co.cacoethes.lazybones-templates' version '1.2.2'
}

lazybones {
	template 'angular-grails' includes 'module'
	repositoryName = 'craigburke/lazybones'
	repositoryUsername = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
	repositoryApiKey = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
}

project.ext {
	angularVersion = '1.3'
	testApp = [
		templateVersion: '2.0.0-SNAPSHOT',
		dir: 'test/apps/',
		name: 'angular-grails',
		group: 'com.craigburke.angular',
		version: '1.0',
		angularModule: 'exampleApp',
		warName: 'angular-grails.war'
	]
}

task buildTestApps(dependsOn: 'installAllTemplates') << {
	delete file(project.testApp.dir)
	
	def properties = [
		appName: project.testApp.name,
		group: project.testApp.group,
		version: project.testApp.version,
		angularModule: project.testApp.angularModule,
		warName : project.testApp.warName
	]

	['1.2', '1.3'].each { String angularVersion ->
		properties.angularVersion = angularVersion
		String projectDir = "${project.testApp.dir}/${angularVersion}"

		def createCmd = ['lazybones','create', 'angular-grails', project.testApp.templateVersion, projectDir]
		properties.each { key, value -> createCmd << "-P${key}=${value}"}
	
		project.exec {
			commandLine createCmd
		}
	
		project.copy {
			from "test/domain"
			into "${projectDir}/grails-app/domain"
		}
	
		// Not sure why stored-params.properties isn't saved correctly
		def paramsFile = new File("${projectDir}/.lazybones/stored-params.properties")
		properties.each { key, value ->
			paramsFile.text += "${key}=${value}\n"
		}
	
		def modules = [
			[name: 'author', domainClass: 'Author'],
			[name: 'book', domainClass: 'Book']
		]
	
		modules.each { module ->
			project.exec {
				workingDir projectDir
				commandLine 'lazybones', 'generate', 'module', "-PmoduleName=${module.name}", "-PdomainClass=${module.domainClass}"
			}
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
