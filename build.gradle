plugins {
	id "uk.co.cacoethes.lazybones-templates" version "1.2.2"
}

lazybones {
	template "angular-grails" includes "module"
	repositoryName = "craigburke/lazybones"
	repositoryUsername = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
	repositoryApiKey = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
}

project.ext {
	testApp = [
		templateVersion: '1.1.3',
		dir: 'test/app',
		name: 'angular-grails',
		group: 'com.craigburke.angular',
		version: '1.0',
		angularModule: 'exampleApp',
		warName: 'angular-grails.war'
	]
	
}

task buildTestApp(dependsOn: 'installAllTemplates') << {
	delete file(project.testApp.dir)
	
	def properties = [
		appName: project.testApp.name,
		angularVersion: project.angularVersion,
		group: project.testApp.group,
		version: project.testApp.version,
		angularModule: project.testApp.angularModule,
		warName : project.testApp.warName
	]
	
	def createCmd = ['lazybones','create', 'angular-grails', project.testApp.templateVersion, project.testApp.dir]
	properties.each { key, value -> createCmd << "-P${key}=${value}"}
	
	project.exec {
		commandLine createCmd
	}
	
	project.copy {
		from "test/domain"
		into "${project.testApp.dir}/grails-app/domain"
	}
	
	// Not sure why stored-params.properties isn't saved correctly
	def paramsFile = new File("${testApp.dir}/.lazybones/stored-params.properties")
	properties.each { key, value ->
		paramsFile.text += "${key}=${value}\n"
	}
	
	def modules = [
		[name: 'author', domainClass: 'Author'],
		[name: 'book', domainClass: 'Book']
	]
	
	modules.each { module ->
		project.exec {
			workingDir project.testApp.dir
			commandLine 'lazybones', 'generate', 'module', "-PmoduleName=${module.name}", "-PdomainClass=${module.domainClass}"
		}
	}
	
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
